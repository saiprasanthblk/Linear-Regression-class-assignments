lines(age .grid ,pred$fit ,lwd =2)
lines(age .grid ,pred$fit +2* pred$se ,lty =" dashed ")
lines(age .grid ,pred$fit -2* pred$se ,lty =" dashed ")
library(splines)
fit=lm(wage∼bs(age ,knots =c(25 ,40 ,60) ),data=Wage)
pred=predict (fit ,newdata =list(age =age.grid),se=T)
plot(age ,wage ,col =" gray ")
lines(age.grid ,pred$fit ,lwd =2)
lines(age.grid ,pred$fit +2* pred$se ,lty =" dashed ")
lines(age.grid ,pred$fit -2* pred$se ,lty =" dashed ")
library(splines)
fit=lm(wage∼bs(age ,knots =c(25 ,40 ,60) ),data=Wage)
pred=predict (fit ,newdata =list(age =age.grid),se=T)
plot(age ,wage ,col =" gray ")
lines(age.grid ,pred$fit ,lwd =2)
lines(age.grid ,pred$fit +2* pred$se ,lty =" dashed ")
lines(age.grid ,pred$fit + 2*pred$se ,lty =" dashed ")
lines(age.grid ,pred$fit + 2*pred$se ,lty = "dashed")
lines(age.grid ,pred$fit - 2*pred$se ,lty = "dashed")
dim(bs(age ,knots=c(25 ,40 ,60)))
dim(bs(age ,df=6))
attr(bs(age ,df=6) ,"knots")
fit2=lm(wage∼ns(age ,df =4) ,data=Wage)
pred2=predict (fit2 ,newdata =list(age=age.grid),se=T)
lines(age .grid , pred2$fit ,col ="red",lwd =2)
fit2=lm(wage∼ns(age ,df =4) ,data=Wage)
fit2=lm(wage∼ns(age ,df =4) ,data=Wage)
pred2=predict (fit2 ,newdata =list(age=age.grid),se=T)
lines(age.grid , pred2$fit ,col ="red",lwd =2)
plot(age ,wage ,xlim=agelims ,cex =.5, col =" darkgrey ")
title (" Smoothing Spline ")
fit=smooth .spline (age ,wage ,df =16)
fit2=smooth .spline (age ,wage ,cv=TRUE)
fit2$df
lines(fit ,col ="red ",lwd =2)
plot(age ,wage ,xlim=agelims ,cex =.5, col =" darkgrey ")
title("Smoothing Spline")
fit=smooth.spline (age ,wage ,df =16)
fit2=smooth.spline (age ,wage ,cv=TRUE)
fit2$df
lines(fit ,col ="red ",lwd =2)
lines(fit2 ,col =" blue",lwd =2)
legend (" topright ",legend =c("16 DF " ,"6.8 DF"), col=c("red "," blue "),lty =1, lwd =2, cex =.8)
lines(fit2 ,col =" blue",lwd =2)
legend("topright",legend =c("16 DF " ,"6.8 DF"), col=c("red "," blue "), lty =1, lwd =2, cex =.8)
plot(age ,wage ,xlim=agelims ,cex =.5, col =" darkgrey ")
title (" Local Regression ")
fit=loess (wage∼age ,span =.2, data=Wage)
fit2=loess(wage∼age ,span =.5, data=Wage)
lines(age .grid ,predict (fit ,data.frame(age=age.grid)),col ="red ",lwd =2)
lines(age .grid ,predict (fit2 ,data.frame(age=age.grid)),col =" blue",lwd =2)
legend (" topright ",legend =c("Span =0.2" ," Span =0.5") ,col=c("red "," blue "),lty =1, lwd =2, cex =.8)
plot(age ,wage ,xlim=agelims ,cex =.5, col =" darkgrey ")
title (" Local Regression ")
fit=loess (wage∼age ,span =.2, data=Wage)
fit2=loess(wage∼age ,span =.5, data=Wage)
lines(age.grid ,predict (fit ,data.frame(age=age.grid)),col ="red ",lwd =2)
lines(age.grid ,predict (fit2 ,data.frame(age=age.grid)),col =" blue",lwd =2)
legend (" topright ",legend =c("Span =0.2" ," Span =0.5") ,col=c("red "," blue "),lty =1, lwd =2, cex =.8)
lines(age.grid ,predict (fit2 ,data.frame(age=age.grid)),col =" blue",lwd =2)
legend (" topright ",legend =c("Span =0.2" ," Span =0.5") ,col=c("red "," blue "),lty =1, lwd =2, cex =.8)
legend(" topright ",legend =c("Span =0.2"," Span =0.5") ,col=c("red","blue"),lty =1, lwd =2, cex =.8)
legend("topright",legend =c("Span =0.2"," Span =0.5") ,col=c("red","blue"),lty =1, lwd =2, cex =.8)
gam1=lm(wage∼ns(year ,4)+ns(age ,5) +education ,data=Wage)
library(gam)
gam.m3=gam(wage∼s(year ,4)+s(age ,5)+education ,data=Wage)
library(gam)
install.packages("gam")
library(gam)
gam.m3 = gam(wage∼s(year ,4)+s(age ,5)+education ,data=Wage)
gam.m3 = gam(wage∼s(year ,4)+s(age ,5)+education ,data=Wage)
fit=loess (wage∼age ,span =.2, data=Wage)
par(mfrow =c(1,3))
plot(gam.m3, se=TRUE ,col ="blue ")
gam.m3 = gam(wage∼s(year ,4)+s(age ,5)+education ,data=Wage)
gam.m3 = gam(wage∼s(year,4)+ s(age,5) + education ,data=Wage)
gam.m3 = gam(wage ~ s(year,4)+ s(age,5) + education ,data=Wage)
gam1=lm(wage∼ns(year ,4)+ns(age ,5) +education ,data=Wage)
library(gam)
gam.m3 = gam(wage ~ s(year,4)+ s(age,5) + education ,data=Wage)
library(gam)
gam.m3 = gam(wage ~ s(year,4)+ s(age,5) + education ,data=Wage)
par(mfrow =c(1,3))
plot(gam.m3, se=TRUE ,col ="blue ")
gam.m3 = lm(wage ~ s(year,4)+ s(age,5) + education ,data=Wage)
gam.m3 = gam(wage~s(year,4)+s(age,5)+education ,data=Wage)
plot.gam(gam1 , se=TRUE , col ="red ")
plot(gam.m3, se=TRUE ,col ="blue")
gam.m1=gam(wage∼s(age ,5) +education ,data=Wage)
gam.m2=gam(wage∼year+s(age ,5)+education ,data=Wage)
anova(gam .m1 ,gam.m2 ,gam.m3,test="F")
gam.m1=gam(wage∼s(age,5) + education, data=Wage)
Wage
gam.m1=gam(wage ~ s(age,5) + education, data=Wage)
gam.m3 = lm(wage~s(year,4)+s(age,5)+education ,data=Wage)
gam.m3 = lm(wage~s(year)+s(age)+education ,data=Wage)
gam.m3 = lm(wage~s(year, 4)+s(age, 5)+education ,data=Wage)
preds=predict (gam.m2,newdata =Wage)
plot(gam.m3, se=TRUE ,col ="blue")
gam.lo=gam(wage∼s(year ,df=4)+lo(age ,span =0.7)+education , data=Wage)
x = -2:2
y = 1 + x + -2 * (x-1)^2 * I(x>1)
plot(x, y)
library(ISLR)
library(boot)
set.seed(1)
deltas <- rep(NA, 10)
for (i in 1:10) {
fit <- glm(wage ~ poly(age, i), data = Wage)
deltas[i] <- cv.glm(Wage, fit, K = 10)$delta[1]
}
plot(1:10, deltas, xlab = "Degree", ylab = "Test MSE", type = "l")
d.min <- which.min(deltas)
points(which.min(deltas), deltas[which.min(deltas)], col = "red", cex = 2, pch = 20)
deltas
which.min(deltas)
plot(wage ~ age, data = Wage, col = "darkgrey")
agelims <- range(Wage$age)
age.grid <- seq(from = agelims[1], to = agelims[2])
fit <- lm(wage ~ poly(age, 3), data = Wage)
preds <- predict(fit, newdata = list(age = age.grid))
lines(age.grid, preds, col = "red", lwd = 2)
age.grid
agelims
fit1
fit1 <- lm(wage ~ age, data = Wage)
summary(fit1)
summary(fit3)
fit2 <- lm(wage ~ poly(age, 2), data = Wage)
fit3 <- lm(wage ~ poly(age, 3), data = Wage)
fit4 <- lm(wage ~ poly(age, 4), data = Wage)
fit5 <- lm(wage ~ poly(age, 5), data = Wage)
summary(fit3)
summary(fit3)
summary(fit1)
anova(fit1, fit2, fit3, fit4, fit5)
summary(fit4)
summary(fit4)
summary(fit5)
summary(fit1)
summary(fit2)
fit6 <- lm(wage ~ age^3, data = Wage)
summary(fit6)
fit6 <- lm(wage ~ age + age^2 + age^3, data = Wage)
summary(fit6)
fit7 <- lm(wage ~ poly(age, 7), data = Wage)
summary(fit7)
cvs <- rep(NA, 10)
for (i in 2:10) {
Wage$age.cut <- cut(Wage$age, i)
fit <- glm(wage ~ age.cut, data = Wage)
cvs[i] <- cv.glm(Wage, fit, K = 10)$delta[1]
}
plot(2:10, cvs[-1], xlab = "Cuts", ylab = "Test MSE", type = "l")
d.min <- which.min(cvs)
points(which.min(cvs), cvs[which.min(cvs)], col = "red", cex = 2, pch = 20)
plot(wage ~ age, data = Wage, col = "darkgrey")
agelims <- range(Wage$age)
age.grid <- seq(from = agelims[1], to = agelims[2])
fit <- glm(wage ~ cut(age, 8), data = Wage)
preds <- predict(fit, data.frame(age = age.grid))
lines(age.grid, preds, col = "red", lwd = 2)
set.seed(1)
summary(Wage$maritl)
summary(Wage$jobclass)
par(mfrow = c(1, 2))
plot(Wage$maritl, Wage$wage)
plot(Wage$jobclass, Wage$wage)
fit1 <- gam(wage ~ lo(year, span = 0.7) + s(age, 5) + education, data = Wage)
library(gam)
library(gam)
fit1 <- gam(wage ~ lo(year, span = 0.7) + s(age, 5) + education, data = Wage)
require(gam)
fit1 <- gam(wage ~ lo(year, span = 0.7) + s(age, 5) + education, data = Wage)
require("mgcv")
fit1 <- gam(wage ~ lo(year, span = 0.7) + s(age, 5) + education, data = Wage)
library(splines)
fit1 <- gam(wage ~ lo(year, span = 0.7) + s(age, 5) + education, data = Wage)
require(mgcv)
require("mgcv")
fit1 <- gam(wage ~ lo(year, span = 0.7) + s(age, 5) + education, data = Wage)
fit1 <- gam(wage ~ lo(year, span = 0.7) + ns(age, 5) + education, data = Wage)
fit1 <- gam(wage ~ lo(year, span = 0.7) + ns(age, 5) + education, data = Wage)
fit2 <- gam(wage ~ lo(year, span = 0.7) + ns(age, 5) + education + jobclass, data = Wage)
fit3 <- gam(wage ~ lo(year, span = 0.7) + ns(age, 5) + education + maritl, data = Wage)
fit4 <- gam(wage ~ lo(year, span = 0.7) + ns(age, 5) + education + jobclass + maritl, data = Wage)
anova(fit1, fit2, fit3, fit4)
summary(fit3)
par(mfrow = c(3, 3))
plot(fit3, se = T, col = "blue")
fit1 <- gam(wage ~ lo(year, span = 0.7) + s(age, 5) + education, data = Wage)
par(mfrow = c(1,2))
plot(Wage$maritl, Wage$wage)
plot(Wage$jobclass, Wage$wage)
#These are usefull plots to look at because we can tell by comparison that
#married couples typically earn more than divorced couples. Additionally,
#informational jobs typically earn more than industrial.
#GAM Method
library(gam)
#best results and most logical with span = 0.7
gam = gam(wage~lo(year, span=0.7) +s(age,5) + education, data=Wage)
gam.1 = gam(wage~lo(year, span=0.7) +s(age,5) + education + jobclass, data=Wage)
gam.2 = gam(wage~lo(year, span=0.7) +s(age,5) + education + maritl, data=Wage)
gam.3 = gam(wage~lo(year, span=0.7) +s(age,5) + education + jobclass + maritl, data=Wage)
anova(gam, gam.1, gam.2, gam.3)
# Analysis of Deviance Table
#
# Model 1: wage ~ lo(year, span = 0.7) + s(age, 5) + education
# Model 2: wage ~ lo(year, span = 0.7) + s(age, 5) + education + jobclass
# Model 3: wage ~ lo(year, span = 0.7) + s(age, 5) + education + maritl
# Model 4: wage ~ lo(year, span = 0.7) + s(age, 5) + education + jobclass +
#   maritl
# Resid. Df Resid. Dev Df Deviance  Pr(>Chi)
# 1    2987.1    3691855
# 2    2986.1    3679689  1    12166 0.0014637 **
#   3    2983.1    3597526  3    82163  9.53e-15 ***
#   4    2982.1    3583675  1    13852 0.0006862 ***
#   ---
#   Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#Plots of results obtained
par(mfrow = c(3, 3))
plot(gam.3, se = T, col = "red")
gam = gam(wage~lo(year, span=0.7) +s(age,5) + education, data=Wage)
library(MASS)
set.seed(1)
fit <- lm(nox ~ poly(dis, 3), data = Boston)
summary(fit)
dislims <- range(Boston$dis)
dis.grid <- seq(from = dislims[1], to = dislims[2], by = 0.1)
preds <- predict(fit, list(dis = dis.grid))
plot(nox ~ dis, data = Boston, col = "darkgrey")
lines(dis.grid, preds, col = "red", lwd = 2)
plot(dis.grid, preds, col = "red", lwd = 2)
rss <- rep(NA, 10)
for (i in 1:10) {
fit <- lm(nox ~ poly(dis, i), data = Boston)
rss[i] <- sum(fit$residuals^2)
}
plot(1:10, rss, xlab = "Degree", ylab = "RSS", type = "l")
deltas <- rep(NA, 10)
for (i in 1:10) {
fit <- glm(nox ~ poly(dis, i), data = Boston)
deltas[i] <- cv.glm(Boston, fit, K = 10)$delta[1]
}
plot(1:10, deltas, xlab = "Degree", ylab = "Test MSE", type = "l")
fit <- lm(nox ~ bs(dis, knots = c(4, 7, 11)), data = Boston)
summary(fit)
plot(nox, dis)
plot(Boston$nox, Boston$dis)
plot(Boston$dis, Boston$nox)
pred <- predict(fit, list(dis = dis.grid))
plot(nox ~ dis, data = Boston, col = "darkgrey")
lines(dis.grid, preds, col = "red", lwd = 2)
rss <- rep(NA, 16)
for (i in 3:16) {
fit <- lm(nox ~ bs(dis, df = i), data = Boston)
rss[i] <- sum(fit$residuals^2)
}
plot(3:16, rss[-c(1, 2)], xlab = "Degrees of freedom", ylab = "RSS", type = "l")
cv <- rep(NA, 16)
for (i in 3:16) {
fit <- glm(nox ~ bs(dis, df = i), data = Boston)
cv[i] <- cv.glm(Boston, fit, K = 10)$delta[1]
}
plot(3:16, cv[-c(1, 2)], xlab = "Degrees of freedom", ylab = "Test MSE", type = "l")
library(readxl)
data <- as.data.frame(read_excel("data-table-B11.xls"))
setwd("C:/Users/Prasanth/Downloads/M.S. Data Science Academics/1st Sem/Linear Regression/Assignments/Assignment 5")
library(readxl)
data <- as.data.frame(read_excel("data-table-B11.xls"))
View(data)
library(readxl)
data <- as.data.frame(read_excel("data-table-B11.xls"))
model <- lm(data$Quality ~ data$Clarity + data$Aroma + data$Body + data$Flavor + data$Oakiness)
qqnorm(rstudent(model))
qqline(rstudent(model))
yhat <- fitted(model)
plot(yhat,ti)
ti<-rstudent(model)
yhat <- fitted(model)
plot(yhat,ti)
qqnorm(rstudent(model))
qqline(rstudent(model))
plot(data$Clarity,ti)
plot(data$Aroma,ti)
plot(data$Body,ti)
plot(data$Flavor,ti)
plot(data$Oakiness,ti) # one point beyond -2 to 2 range
cooks.distance(model)
dfbetas(model)
dffits(model)
dffits(model)
covratio(model)
summary(influence.measures(model))
dfbetas(model)
summary(influence.measures(model))
data <- as.data.frame(read_excel("data-table-B12.xls"))
View(data)
model <- lm(data$Pitch ~ ., data = data)
model <- lm(data$pitch ~ ., data = data)
qqnorm(rstudent(model))
qqline(rstudent(model))
ti<-rstudent(model)
yhat <- fitted(model)
plot(yhat,ti)
plot(data$temp,ti) # one point beyond -2 to 2 range
plot(data$soaktime,ti) # one point beyond -2 to 2 range
plot(data$soaktime,ti) # one point beyond -2 to 2 range
plot(data$Soakpct,ti) # one point beyond -2 to 2 range
plot(data$difftime,ti) # one point beyond -2 to 2 range
plot(data$diffpct,ti) # one point beyond -2 to 2 range
plot(data$diffpct,ti) # one point beyond -2 to 2 range
cooks.distance(model)
summary(influence.measures(model))
data <- as.data.frame(read_excel("data-table-B13.xls"))
View(data)
model <- lm(data$y ~ ., data = data)
qqnorm(rstudent(model))
qqline(rstudent(model))
ti<-rstudent(model)
yhat <- fitted(model)
plot(yhat,ti)
plot(data$temp,ti) # one outlier. there's a point at two
plot(data$soaktime,ti) # one point beyond -2 to 2 range
plot(data$x1,ti) # one outlier. there's a point at two
plot(data$x2,ti) # one point beyond -2 to 2 range
plot(data$x3,ti) # one point beyond -2 to 2 range
plot(data$x4,ti) # one point beyond -2 to 2 range
plot(data$x5,ti) # one point beyond -2 to 2 range
summary(influence.measures(model))
data <- as.data.frame(read_excel("data-table-B14.xls"))
View(data)
data <- as.data.frame(read_excel("data-table-B12.xls"))
model <- lm(data$pitch ~ ., data = data)
summary(influence.measures(model))
data <- as.data.frame(read_excel("data-table-B13.xls"))
model <- lm(data$y ~ ., data = data)
summary(influence.measures(model))
data <- as.data.frame(read_excel("data-table-B14.xls"))
data$x6 = data$x1 - data$x4
model <- lm(data$y ~ data$x6, data = data)
data <- as.data.frame(read_excel("data-table-B14.xls"))
model <- lm(data$y ~ data$x1 + data$x2 + data$x3 + data$x4)
data <- as.data.frame(read_excel("data-table-B14.xls"))
model <- lm(data$y ~ data$x1 + data$x2 + data$x3 + data$x4)
summary(influence.measures(model))
qqnorm(rstudent(model))
qqline(rstudent(model))
ti<-rstudent(model)
yhat <- fitted(model)
plot(yhat,ti)
summary(influence.measures(model))
data <- as.data.frame(read_excel("data-table-B3.xls"))
model <- lm(data$y ~ data$x10 + data$x11)
summary(model)
model2 <- lm(data$y ~ data$x10 + data$x11 + I(data$x10*data$x11))
summary(model2)
data <- as.data.frame(read_excel("data-table-B1.xls"))
View(data)
data$x11 <- ifelse(data$x5 < 0, 1, ifelse((data$x5 == 0), 0))
data$x11 <- ifelse(data$x5 < 0, 1, ifelse((data$x5 = 0), 0))
data$x11 <- ifelse(data$x5 < 0, 1, ifelse((data$x5 == 0), 0))
View(data)
data <- as.data.frame(read_excel("data-table-B1.xls"))
View(data)
data$x11 <- ifelse(data$x5 < 0, 1, ifelse((data$x5 = 0), 0))
data$x11 <- ifelse(data$x5 < 0, 1)
data$x11 <- ifelse(data$x5 < 0, 1, 0)
View(data)
data <- as.data.frame(read_excel("data-table-B1.xls"))
data$x11 <- ifelse(data$x5 < 0, 1, 0)
View(data)
data$x11 <- ifelse(data$x5 < 0, 1, 0)
data$x12 <- ifelse(data$x5 > 0, 1, 0)
model <- lm(data$y ~ data$x7 + data$x8 + data$x11 + data$x12)
summary(model)
model5 <- lm(data$y ~ data$x7 + data$x8 + data$x5)
summary(model5)
summary(model)
data <- as.data.frame(read_excel("data-table-B11.xls"))
model <- lm(y ~ x4, data = data)
model <- lm(Quality ~ flavor, data = data)
model <- lm(Quality ~ Flavor, data = data)
View(data)
data <- as.data.frame(read_excel("data-table-B3.xls"))
model2 <- lm(data$y ~ data$x10 + data$x11 + I(data$x10*data$x11))
summary(model2)
data <- as.data.frame(read_excel("data-table-B11.xls"))
View(data)
data$Region = as.factor(data$Region)
model8 <- lm(Quality ~ Flavor + Region, data = data)
summary(model8)
summary(model8)
anova(model)
anova(model8)
data <- as.data.frame(read_excel("data-table-B11.xls"))
data$Region = as.factor(data$Region)
model <- lm(Quality ~ Flavor + Region, data = data)
summary(model8)
anova(model8)
anova(model5)
data <- as.data.frame(read_excel("data-table-B1.xls"))
data$x11 <- ifelse(data$x5 < 0, 1, 0)
data$x12 <- ifelse(data$x5 > 0, 1, 0)
model <- lm(data$y ~ data$x7 + data$x8 + data$x11 + data$x12)
anova(model)
data$x5 = as.factor(data$x5)
model5 <- lm(data$y ~ data$x7 + data$x8 + data$x5)
summary(model5)
anova(model5)
data <- as.data.frame(read_excel("data-table-B1.xls"))
data <- as.data.frame(read_excel("data-table-B1.xls"))
data$x11 <- ifelse(data$x5 < 0, 1, 0)
data$x12 <- ifelse(data$x5 > 0, 1, 0)
model <- lm(data$y ~ data$x7 + data$x8 + data$x11 + data$x12)
anova(model)
data$x11 <- ifelse(data$x5 < 0, -1, 0)
data$x11 <- ifelse(data$x5 > 0, 1, 0)
data$x11 <- as.factor(data$x11)
model5 <- lm(data$y ~ data$x7 + data$x8 + data$x11)
anova(model5)
data <- as.data.frame(read_excel("data-table-B1.xls"))
data$x11 <- ifelse(data$x5 > 0, 1, ifelse(data$x5 = 0), 0, -1)
data$x11 <- ifelse(data$x5 > 0, 1, ifelse(data$x5 == 0), 0, -1)
data <- as.data.frame(read_excel("data-table-B1.xls"))
data$x11 <- ifelse(data$x5 > 0, 1, 0)
data <- as.data.frame(read_excel("data-table-B1.xls"))
data$x11 <- ifelse(data$x5 > 0, "pos", "neg")
data$x11 <- as.factor(data$x11)
model5 <- lm(data$y ~ data$x7 + data$x8 + data$x11)
anova(model5)
View(data)
data$x11 <- ifelse(data$x5 = 0, "zero")
data$x11 <- ifelse(data$x5 == 0, "zero")
data$x11 <- if(data$x5 == 0, "zero")
data$x11[data$x5 == 0] = "zero"
View(data)
model5 <- lm(data$y ~ data$x7 + data$x8 + data$x11)
anova(model5)
data$x11 = as.factor(data$x11)
model5 <- lm(data$y ~ data$x7 + data$x8 + data$x11)
anova(model5)
data$x11[data$x5 == 0] == "zero"
data$x11[data$x5 == 0] <- "zero"
data$x11 = as.factor(data$x11)
model5 <- lm(data$y ~ data$x7 + data$x8 + data$x11)
anova(model5)
data$x11[data$x5 == 0] <- "zero"
data$x11 = as.factor(data$x11)
model5 <- lm(data$y ~ data$x7 + data$x8 + data$x11)
summary(model5)
anova(model5)
data <- as.data.frame(read_excel("data-table-B11.xls"))
data <- as.data.frame(read_excel("data-table-B11.xls"))
data$Region = as.factor(data$Region)
model <- lm(Quality ~ Flavor + Region, data = data)
anova(model)
model <- lm(Quality ~ Flavor + Region, data = data)
anova(model)
data$Region = as.numeric(data$Region)
model <- lm(Quality ~ Flavor + Region, data = data)
anova(model)
summary(model)
data <- as.data.frame(read_excel("data-table-B11.xls"))
data$Region = as.factor(data$Region)
model <- lm(Quality ~ Flavor + Region, data = data)
anova(model)
data <- as.data.frame(read_excel("data-table-B11.xls"))
data$Region = as.numeric(data$Region)
model <- lm(Quality ~ Flavor + Region, data = data)
summary(model)
anova(model)
model7 <- lm(data$y ~ x7 + x8 + I(x5 > 0) + I(x5 <0), data = data)
data <- as.data.frame(read_excel("data-table-B1.xls"))
model7 <- lm(data$y ~ x7 + x8 + I(x5 > 0) + I(x5 <0), data = data)
anova(model7)
data <- as.data.frame(read_excel("data-table-B1.xls"))
data$x11 <- ifelse(data$x5 > 0, "pos", "neg")
data$x11[data$x5 == 0] <- "zero"
View(data)
I(x5 > 0)
data <- as.data.frame(read_excel("data-table-B1.xls"))
I(data$x5 > 0)
data <- as.data.frame(read_excel("data-table-B1.xls"))
data$x11 <- ifelse(data$x5 > 0, "pos", "neg")
data$x11[data$x5 == 0] <- "zero"
View(data)
data <- as.data.frame(read_excel("data-table-B11.xls"))
View(data)
qqnorm(rstudent(model))
qqline(rstudent(model))
ti<-rstudent(model)
yhat <- fitted(model)
plot(yhat,ti)
data <- as.data.frame(read_excel("data-table-B11.xls"))
model2 <- lm(Quality ~ Flavor + Region + (Flavor*Region), data = data)
model2 <- lm(Quality ~ Flavor + Region + (Flavor*Region), data = data)
data <- as.data.frame(read_excel("data-table-B11.xls"))
data$Region = as.factor(data$Region)
model <- lm(Quality ~ Flavor + Region, data = data)
summary(model)
model2 <- lm(Quality ~ Flavor + Region + (Flavor*Region), data = data)
summary(model2)
qqnorm(rstudent(model2))
qqline(rstudent(model2))
ti<-rstudent(model2)
yhat <- fitted(model2)
plot(yhat,ti)
data <- as.data.frame(read_excel("data-table-B1.xls"))
model7 <- lm(data$y ~ x7 + x8 + I(data$x5 > 0) + I(data$x5 <0), data = data)
summary(model7)
anova(model7)
